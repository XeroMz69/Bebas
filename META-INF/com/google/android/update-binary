#!/sbin/sh
OUTFD=/proc/self/fd/$2
ZIPF="$3"
ui_print() {
	echo -e "ui_print $1\nui_print" >>$OUTFD
}
package_extract_file() {
  if [ -e $2$(getprop ro.boot.slot_suffix) ] && [ "$(getprop ro.boot.slot_suffix)" != "" ] ;then
  unzip -p "$ZIPF" $1 >${2}_a
  unzip -p "$ZIPF" $1 >${2}_b
  else
  unzip -p "$ZIPF" $1 >$2
  fi
}
package_extract_zstd() {
  ui_print "- Patching $(basename $2) unconditionally... "
  if [ -e ${2}_a ] ;then
  unzip -p "$ZIPF" $1 | /tmp/bin/zstd -c -d >${2}_a
  else
  unzip -p "$ZIPF" $1 | /tmp/bin/zstd -c -d >$2
  fi
}
getVolumeKey() {
	ui_print "- 监听音量键 按[+]是Y 按[-]是N"
	ui_print "- Listening for volume keys, press [+] for Yes, press [-] for No."
	key=$(getevent -qlc 1)
	Up=$(echo $key |grep KEY_VOLUMEUP)
	Down=$(echo $key |grep KEY_VOLUMEDOWN)
	[ "$Up" != "" ] && return 0
	[ "$Down" != "" ] && return 1
}
remap() {
	for part in $(ls /dev/block/mapper/)
	do
	[ "$part" == "by-uuid" ] && continue
	ui_print "正在重新挂载$part"
	ui_print "Re-mounting$part"
	lptools unmap $part
	lptools map $part
	done
}
[ -d /tmp ] && rm -rf /tmp
right_device="earth"
mkdir -p /tmp
unzip "$ZIPF" bin/zstd -d /tmp
chmod -R 0755 /tmp
device=$(getprop ro.product.device)
ui_print " __  __ _ _          _   _ ___" 
ui_print "|  \/  (_) | ___   _| | | |_ _|"
ui_print "| |\/| | | |/ / | | | | | || | "
ui_print "| |  | | |   <| |_| | |_| || | "
ui_print "|_|  |_|_|_|\_\\__,_|\___/|___|"
ui_print "        MikuUI Vampire"
ui_print "Build by @XeroMz69, fix by @dtyaa_ajh"
ui_print "- Starting the flashing process."
package_extract_file "images/tee.img" "/dev/block/by-name/tee"
package_extract_zstd "images/super.img.zst" "/dev/block/by-name/super"
package_extract_file "images/sspm.img" "/dev/block/by-name/sspm"
package_extract_file "images/spmfw.img" "/dev/block/by-name/spmfw"
package_extract_file "images/scp.img" "/dev/block/by-name/scp"
package_extract_file "images/md1img.img" "/dev/block/by-name/md1img"
package_extract_file "images/logo.img" "/dev/block/by-name/logo"
package_extract_file "images/lk.img" "/dev/block/by-name/lk"
package_extract_file "images/gz.img" "/dev/block/by-name/gz"
package_extract_file "images/dtbo.img" "/dev/block/by-name/dtbo"
package_extract_file "images/boot.img" "/dev/block/by-name/boot"
#Other images
# UFS
if [ -e /dev/block/sda ] && [ -f tmp/images/preloader_ufs.img ] ;then
	package_extract_file "images/preloader_ufs.img" "/dev/block/by-name/sda"
fi
#EMMC
if [ -e /dev/block/mmcblk0boot0 ] && [ -f tmp/images/preloader_emmc.img ] ;then
	package_extract_file "images/preloader_emmc.img" "/dev/block/by-name/mmcblk0boot0"
fi
if [ -e /dev/block/mmcblk0boot1 ] && [ -f tmp/images/preloader_emmc.img ] ;then
	package_extract_file "images/preloader_emmc.img" "/dev/block/by-name/mmcblk0boot1"
fi
if [ -f tmp/images/preloader_raw.img ] ;then
	for preloaderPartition in $(ls /dev/block/by-name |grep preloader);do
		package_extract_file "images/preloader_raw.img" "/dev/block/by-name/$preloaderPartition"
	done
fi
#super image
ui_print "- Clearing cache"
rm -rf /data/dalvik-cache/arm/*
rm -rf /data/dalvik-cache/arm64/*
rm -rf /data/system/package_cache/*
#remap
[ -e /dev/block/by-name/super ] && remap
ui_print "- Flashing complete."
exit 0